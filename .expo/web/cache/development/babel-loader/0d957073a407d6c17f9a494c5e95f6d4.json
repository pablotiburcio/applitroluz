{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/media/lucas/Arquivos/Programas/applitroluz/src/pages/DetailedStep/index.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport IconButton from \"../../components/IconButton\";\nimport styles from \"./styles\";\nimport { lampiao_steps_images } from \"../../utils/global_variables\";\nimport { useGuide } from \"../../contexts/guide\";\nimport FailureModal from \"../../components/FailureModal\";\n\nfunction DetailedStep() {\n  var _useGuide = useGuide(),\n      currentStep = _useGuide.currentStep,\n      currentAction = _useGuide.currentAction,\n      setStep = _useGuide.setStep,\n      setAction = _useGuide.setAction;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  function stepSuccessful() {\n    if (currentStep.work.type === 'step') {\n      setStep(currentStep.work.jump);\n    } else {\n      setAction(currentStep.work.jump);\n    }\n  }\n\n  function stepFailed() {\n    if (currentStep.failure.type === 'step') {\n      setStep(currentStep.failure.jump);\n    } else {\n      setAction(currentStep.failure.jump);\n      setModalVisible(true);\n    }\n  }\n\n  function onClose() {\n    setModalVisible(false);\n    setStep(0);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.cardDetailedStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, currentStep.description), React.createElement(Image, {\n    style: styles.image,\n    source: lampiao_steps_images[0],\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.questionCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.questionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, currentStep.question)), React.createElement(View, {\n    style: styles.actionButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(IconButton, {\n    title: \"Sim\",\n    icon: \"done\",\n    color: \"#5EBF2D\",\n    onPress: stepSuccessful,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      width: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), React.createElement(IconButton, {\n    title: \"N\\xE3o\",\n    icon: \"close\",\n    color: \"#FF3B3B\",\n    onPress: stepFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))), React.createElement(FailureModal, {\n    isVisible: isModalVisible,\n    title: \"N\\xE3o Acendeu?\",\n    description: currentAction.description,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default DetailedStep;","map":{"version":3,"sources":["/media/lucas/Arquivos/Programas/applitroluz/src/pages/DetailedStep/index.tsx"],"names":["React","useState","IconButton","styles","lampiao_steps_images","useGuide","FailureModal","DetailedStep","currentStep","currentAction","setStep","setAction","isModalVisible","setModalVisible","stepSuccessful","work","type","jump","stepFailed","failure","onClose","container","cardDetailedStep","title","description","image","questionCard","questionText","question","actionButtons","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Image } from 'react-native';\nimport IconButton from '../../components/IconButton';\nimport styles from './styles';\n\nimport { lampiao_steps_images } from '../../utils/global_variables';\nimport { useGuide } from '../../contexts/guide';\nimport FailureModal from '../../components/FailureModal';\n\nfunction DetailedStep() {\n  const { currentStep, currentAction, setStep, setAction } = useGuide();\n  const [isModalVisible, setModalVisible] = useState(false);\n\n  function stepSuccessful() {\n    if (currentStep.work.type === 'step') {\n      setStep(currentStep.work.jump);\n    }\n\n    else {\n      setAction(currentStep.work.jump);\n    }\n  }\n\n  function stepFailed() {\n    if (currentStep.failure.type === 'step') {\n      setStep(currentStep.failure.jump);\n    }\n\n    else {\n      setAction(currentStep.failure.jump);\n      setModalVisible(true);\n    }\n  }\n\n  function onClose() {\n    setModalVisible(false);\n    setStep(0);\n  }\n\n  return(\n    <View style={styles.container}>\n      <View style={styles.cardDetailedStep}>\n        <Text style={styles.title}>{currentStep.description}</Text>\n        <Image\n          style={styles.image}\n          source={lampiao_steps_images[0]}\n          resizeMode=\"contain\"\n        />\n        <View style={styles.questionCard}>\n          <Text style={styles.questionText}>{currentStep.question}</Text>\n        </View>\n        <View style={styles.actionButtons}>\n          <IconButton \n            title='Sim'\n            icon='done'\n            color='#5EBF2D'\n            onPress={stepSuccessful}\n          />\n          <View style={{width: 40}} />\n          <IconButton \n            title='Não'\n            icon='close'\n            color='#FF3B3B'\n            onPress={stepFailed}\n          />\n        </View>\n      </View>\n      <FailureModal \n        isVisible={isModalVisible}\n        title='Não Acendeu?'\n        description={currentAction.description}\n        onClose={onClose}\n      />\n    </View>\n  );\n}\n\nexport default DetailedStep;"]},"metadata":{},"sourceType":"module"}